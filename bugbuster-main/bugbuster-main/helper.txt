https://www.chilkatsoft.com/installPythonMacOSX.asp

{{ url_for('static', filename='images/apk-file-format-symbol.svg') }}
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Upload APK File</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            padding: 60px 15px;
        }

        .drop-area {
            border: 2px dashed #ccc;
            padding: 20px;
            text-align: center;
            cursor: pointer;
        }

        .drop-area.drag {
            background-color: #f7f7f7;
        }

        .custom-file-input {
            cursor: pointer;
        }

        .selected-file-info {
            margin-top: 10px;
        }
    </style>
</head>

<body class="bg-light">
    <div class="container">
        <h1 class="mb-4">Upload APK File</h1>
        <form method="post" enctype="multipart/form-data">
            <div class="form-group drop-area mb-4" id="drop-area">
                <p class="mb-0">Drag & drop your APK file here or</p>
                <label for="file" class="btn btn-primary">Choose file</label>
                <input type="file" class="custom-file-input" id="file" name="file" accept=".apk" style="display: none;" required>
            </div>
            <div id="selected-file-info" class="selected-file-info"></div>
            <button type="submit" class="btn btn-primary">Upload</button>
        </form>
    </div>

    <script>
        const dropArea = document.getElementById("drop-area");
        const fileInput = document.getElementById("file");
        const selectedFileInfo = document.getElementById("selected-file-info");

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => {
                dropArea.classList.add('drag');
            }, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, () => {
                dropArea.classList.remove('drag');
            }, false);
        });

        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;

            if (files.length > 0) {
                document.getElementById("file").files = files;
            }
        }

        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            e.preventDefault();
            const dt = e.dataTransfer;
            const files = dt.files;

            if (files.length > 0) {
                fileInput.files = files;
                const fileName = files[0].name;
                selectedFileInfo.textContent = `Selected File: ${fileName}`;
            }
        }

        fileInput.addEventListener("change", handleFiles, false);

        function handleFiles() {
            const fileList = fileInput.files;
            if (fileList.length > 0) {
                const fileName = fileList[0].name;
                selectedFileInfo.textContent = `Selected File: ${fileName}`;
            }
        }
    </script>
</body>

</html>

